{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-77453986\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"register\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"提交 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_form, {\n    model: $data.registerForm,\n    ref: \"registerFormRef\",\n    \"label-width\": \"100px\",\n    rules: \"rules\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"用户名：\",\n      prop: \"username\",\n      style: {\n        \"margin-top\": \"10px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inps\",\n          placeholder: \"创建一个用户名\",\n          modelValue: $data.registerForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.registerForm.username = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"昵称：\",\n      prop: \"account\",\n      style: {\n        \"margin-top\": \"10px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inps\",\n          placeholder: \"创建一个昵称\",\n          modelValue: $data.registerForm.account,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.registerForm.account = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码：\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inps\",\n          type: \"password\",\n          placeholder: \"请输入密码\",\n          modelValue: $data.registerForm.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.registerForm.password = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"确认密码：\",\n      prop: \"cpPassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_row, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          class: \"inps\",\n          type: \"password\",\n          placeholder: \"再次输入密码\",\n          modelValue: $data.registerForm.cpPassword,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.registerForm.cpPassword = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        round: \"\",\n        class: \"submitBtn\",\n        onClick: _cache[4] || (_cache[4] = $event => $options.submitForm('registerFormRef'))\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\"])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,EAAE,EAAC;;;iDAoDH;;;;;;;;;;;;;uBApDLC,oBAwDM,KAxDN,cAwDM,CAvDNC,aAsDUC,kBAtDV,EAsDU;IArDLC,KAAK,EAAEC,kBAqDF;IApDNC,GAAG,EAAC,iBAoDE;IAnDN,eAAY,OAmDN;IAlDNC,KAAK,EAAC;EAkDA,CAtDV;sBAKC,MAUc,CAVdL,aAUcM,uBAVd,EAUc;MAVAC,KAAK,EAAC,MAUN;MAVaC,IAAI,EAAC,UAUlB;MAV6BC,KAAwB,EAAxB;QAAA;MAAA;IAU7B,CAVd;wBACC,MAQS,CARTT,aAQSU,iBART,EAQS,IART,EAQS;0BAPL,MAKW,CALXV,aAKWW,mBALX,EAKW;UAJPC,KAAK,EAAC,MAIC;UAHPC,WAAW,EAAC,SAGL;sBAFEV,mBAAaW,QAEf;qEAFEX,mBAAaW,WAAQC;QAEvB,CALX;;QAAA,iBAKW,EAEN;;;;MAAA,CART,CAQS;;;;KATV,CAUc,EACbf,aASeM,uBATf,EASe;MATDC,KAAK,EAAC,KASL;MATWC,IAAI,EAAC,SAShB;MAT0BC,KAAwB,EAAxB;QAAA;MAAA;IAS1B,CATf;wBACE,MAOS,CAPTT,aAOSU,iBAPT,EAOS,IAPT,EAOS;0BANL,MAKW,CALXV,aAKWW,mBALX,EAKW;UAJPC,KAAK,EAAC,MAIC;UAHPC,WAAW,EAAC,QAGL;sBAFEV,mBAAaa,OAEf;qEAFEb,mBAAaa,UAAOD;QAEtB,CALX;;QAAA,iBAKW,EACN;;;;MAAA,CAPT,CAOS;;;;KARX,CADa,EAWbf,aAUeM,uBAVf,EAUe;MAVDC,KAAK,EAAC,KAUL;MAVWC,IAAI,EAAC;IAUhB,CAVf;wBACE,MAQS,CARTR,aAQSU,iBART,EAQS,IART,EAQS;0BANL,MAKY,CALZV,aAKYW,mBALZ,EAKY;UAJRC,KAAK,EAAC,MAIE;UAHRK,IAAI,EAAC,UAGG;UAFRJ,WAAW,EAAC,OAEJ;sBADCV,mBAAae,QACd;qEADCf,mBAAae,WAAQH;QACtB,CALZ;;QAAA,iBAKY,EACP;;;;MAAA,CART,CAQS;;;;KATX,CAXa,EAsBbf,aAWeM,uBAXf,EAWe;MAXDC,KAAK,EAAC,OAWL;MAXaC,IAAI,EAAC;IAWlB,CAXf;wBACE,MASS,CATTR,aASSU,iBATT,EASS,IATT,EASS;0BAPL,MAKY,CALZV,aAKYW,mBALZ,EAKY;UAJRC,KAAK,EAAC,MAIE;UAHRK,IAAI,EAAC,UAGG;UAFRJ,WAAW,EAAC,QAEJ;sBADCV,mBAAagB,UACd;qEADChB,mBAAagB,aAAUJ;QACxB,CALZ;;QAAA,iBAKY,EAEP;;;;MAAA,CATT,CASS;;;;KAVX,CAtBa,EAkCbf,aAIeM,uBAJf,EAIe,IAJf,EAIe;wBAHb,MAEY,CAFZN,aAEYoB,oBAFZ,EAEY;QAFDH,IAAI,EAAC,SAEJ;QAFcI,KAAK,EAAL,EAEd;QAFoBT,KAAK,EAAC,WAE1B;QAFuCU,OAAK,sCAAEC,oBAAU,iBAAV,CAAF;MAE5C,CAFZ;0BACC,MACD;;;;OAFA,CAEY,EACC;;;;IAAA,CAJf,CAlCa;;;;GAff;;EAAA,YAuDM,CAxDN","names":["id","_createElementBlock","_createVNode","_component_el_form","model","$data","ref","rules","_component_el_form_item","label","prop","style","_component_el_row","_component_el_input","class","placeholder","username","$event","account","type","password","cpPassword","_component_el_button","round","onClick","$options"],"sourceRoot":"","sources":["/home/huzihao/rare-vue/src/views/register.vue"],"sourcesContent":["<template>\n  <div id=\"register\">\n  <el-form\n      :model=\"registerForm\"\n      ref=\"registerFormRef\"\n      label-width=\"100px\"\n      rules=\"rules\"\n  ><el-form-item label=\"用户名：\" prop=\"username\" style=\"margin-top: 10px\">\n    <el-row>\n        <el-input\n            class=\"inps\"\n            placeholder=\"创建一个用户名\"\n            v-model=\"registerForm.username\"\n        >\n        </el-input>\n\n    </el-row>\n  </el-form-item>\n    <el-form-item label=\"昵称：\" prop=\"account\" style=\"margin-top: 10px\">\n      <el-row>\n          <el-input\n              class=\"inps\"\n              placeholder=\"创建一个昵称\"\n              v-model=\"registerForm.account\"\n          >\n          </el-input>\n      </el-row>\n    </el-form-item>\n    <el-form-item label=\"密码：\" prop=\"password\">\n      <el-row>\n\n          <el-input\n              class=\"inps\"\n              type=\"password\"\n              placeholder=\"请输入密码\"\n              v-model=\"registerForm.password\"\n          ></el-input>\n      </el-row>\n    </el-form-item>\n    <el-form-item label=\"确认密码：\" prop=\"cpPassword\">\n      <el-row>\n\n          <el-input\n              class=\"inps\"\n              type=\"password\"\n              placeholder=\"再次输入密码\"\n              v-model=\"registerForm.cpPassword\"\n          ></el-input>\n\n      </el-row>\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" round class=\"submitBtn\" @click=\"submitForm('registerFormRef')\"\n      >提交\n      </el-button>\n    </el-form-item>\n  </el-form>\n  </div>\n</template>\n\n<script>\n\nexport default {\n\n\n\n  name: \"register\",\n\n  data() {\n    return {\n      registerForm:{\n        username:'',\n        account:'',\n        password:'',\n        cpPassword:'',\n        errMsg:''\n      },\n      rules:{\n        registerForm:{\n          type: 'object',\n          required: true,\n          fields:{\n            username: [{ required: true, message: '用户名必填', trigger: 'blur' },{message:'用户名必须要有3-10个字母或数字',pattern:/[a-zA-Z1-9]{3,10}/}],\n            account: [{ required: true, message: '昵称必填', trigger: 'blur' },{message: '昵称必须要有1-10个字符',pattern:/\\S{1,10}/}],\n            password: [{ required: true, message: '密码必填', trigger: 'blur' },{message: '密码必须由长度6-16个字母或数字组成，至少包含字母、数字',pattern:/^(?=.*[a-zA-Z])(?=.*\\d).{6,16}$/}],\n            cpPassword: [{  required: true, trigger: 'blur' },]\n          }\n        }\n\n      }\n    }\n  },\n  methods:{\n    submitForm(formName){\n      this.$refs[formName].validate(valid => {\n\n      })\n      const userName = this.registerForm.username;\n      const userPassword = this.registerForm.password;\n      const userCpPassword = this.registerForm.cpPassword;\n      this.checkForm();\n      this.sentForm();\n    },\n  checkForm(){\n    const data={\n    name:this.registerForm.username,\n    username:this.registerForm.account,\n  }\n\n    fetch('api/checkname', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(response => response.json()).then(res =>{if(res.errMsg){this.registerForm.errMsg=res.errMsg}else{return this.$message({\n      type: \"success\",\n      message: \"注册中\",\n    })}\n    });\n  },\n    sentForm(){\n      const data={\n        username:this.registerForm.username,\n        psw:this.registerForm.password,\n        nickname:this.registerForm.account\n      }\n      fetch('api/sign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      }).then(response => response.json()).then(res =>{if(res.errMsg){this.registerForm.errMsg=res.errMsg}else{this.$router.push('/login')}});\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n#register {\n  border-radius: 10px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%,-50%);\n  margin: 0px auto;\n  width: 350px;\n  padding: 30px 35px 15px 35px;\n  background: #fff;\n  border: 1px solid #eaeaea;\n  text-align: center;\n  box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}