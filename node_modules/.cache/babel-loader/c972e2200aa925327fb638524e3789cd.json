{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  name: \"register\",\n\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        account: '',\n        password: '',\n        cpPassword: '',\n        errMsg: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '用户名必填',\n          trigger: 'blur'\n        }, {\n          message: '用户名必须要有3-10个字母或数字',\n          pattern: /[a-zA-Z1-9]{3,10}/\n        }],\n        account: [{\n          required: true,\n          message: '昵称必填',\n          trigger: 'blur'\n        }, {\n          message: '昵称必须要有1-10个字符',\n          pattern: /\\S{1,10}/\n        }],\n        password: [{\n          required: true,\n          message: '密码必填',\n          trigger: 'blur'\n        }, {\n          message: '密码必须至少包含字母、数字',\n          pattern: /^(?=.*[a-zA-Z])(?=.*\\d).{6,16}$/\n        }],\n        cpPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (!value) {\n              return callback(new Error(\"请再次输入密码\"));\n            } else {\n              if (this.registerForm.password !== value) {\n                callback(new Error(\"密码不匹配\"));\n              } else {\n                return callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          console.log(\"success submit!!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n      await this.checkForm();\n      console.log(this.registerForm.errMsg);\n\n      if (this.registerForm.errMsg) {\n        return this.$message({\n          type: \"error\",\n          message: this.registerForm.errMsg\n        });\n      } else {\n        this.sentForm();\n      }\n    },\n\n    async checkForm() {\n      console.log(this.registerForm.username);\n      console.log(this.registerForm.account);\n      const data = {\n        username: this.registerForm.username,\n        nickname: this.registerForm.account\n      };\n      await fetch('api/checkname', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(res => {\n        if (res.errMsg) {\n          this.registerForm.errMsg = res.errMsg;\n        } else {\n          return this.$message({\n            type: \"success\",\n            message: \"注册中\"\n          });\n        }\n      });\n      console.log(\"123\");\n    },\n\n    sentForm() {\n      const data = {\n        usrname: this.registerForm.username,\n        pwd: this.registerForm.password,\n        nickname: this.registerForm.account\n      };\n      fetch('api/sign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(res => {\n        if (res.errMsg) {\n          this.registerForm.errMsg = res.errMsg;\n        } else {\n          this.$router.push('/login');\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","registerForm","username","account","password","cpPassword","errMsg","rules","required","message","trigger","pattern","validator","rule","value","callback","Error","methods","submitForm","formName","$refs","validate","valid","console","log","checkForm","$message","type","sentForm","nickname","fetch","method","headers","body","JSON","stringify","then","response","json","res","usrname","pwd","$router","push"],"sourceRoot":"","sources":["/home/huzihao/rare-vue/src/views/register.vue"],"sourcesContent":["<template>\n  <div id=\"register\">\n    <el-form\n        :model=\"registerForm\"\n        ref=\"registerFormRef\"\n        label-width=\"100px\"\n        :rules=\"rules\"\n    >\n      <el-form-item label=\"用户名：\" prop='username' style=\"margin-top: 10px\">\n        <el-input\n            class=\"inps\"\n            placeholder=\"创建一个用户名\"\n            v-model=\"registerForm.username\"\n        >\n        </el-input>\n      </el-form-item>\n      <el-form-item label=\"昵称：\" prop=\"account\" style=\"margin-top: 10px\">\n        <el-row>\n          <el-input\n              class=\"inps\"\n              placeholder=\"创建一个昵称\"\n              v-model=\"registerForm.account\"\n          >\n          </el-input>\n        </el-row>\n      </el-form-item>\n      <el-form-item label=\"密码：\" prop=\"password\">\n        <el-row>\n\n          <el-input\n              class=\"inps\"\n              type=\"password\"\n              placeholder=\"请输入密码\"\n              v-model=\"registerForm.password\"\n          ></el-input>\n        </el-row>\n      </el-form-item>\n      <el-form-item label=\"确认密码：\" prop=\"cpPassword\">\n        <el-row>\n\n          <el-input\n              class=\"inps\"\n              type=\"password\"\n              placeholder=\"再次输入密码\"\n              v-model=\"registerForm.cpPassword\"\n          ></el-input>\n\n        </el-row>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" class=\"submitBtn\" @click=\"submitForm('registerFormRef')\"\n        >提交\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"register\",\n  data() {\n\n\n    return {\n\n      registerForm: {\n        username: '',\n        account: '',\n        password: '',\n        cpPassword: '',\n        errMsg: '',\n      },\n      rules: {\n        username: [{required: true, message: '用户名必填', trigger: 'blur'}, {\n          message: '用户名必须要有3-10个字母或数字',\n          pattern: /[a-zA-Z1-9]{3,10}/\n        }],\n        account: [{required: true, message: '昵称必填', trigger: 'blur'}, {message: '昵称必须要有1-10个字符', pattern: /\\S{1,10}/}],\n        password: [{required: true, message: '密码必填', trigger: 'blur'}, {\n          message: '密码必须至少包含字母、数字',\n          pattern: /^(?=.*[a-zA-Z])(?=.*\\d).{6,16}$/\n        }],\n        cpPassword: [{required: true, message: '请再次输入密码', trigger: 'blur'}, {\n          validator: (rule, value, callback) => {\n            if (!value) {\n              return callback(new Error(\"请再次输入密码\"));\n            } else {\n              if (this.registerForm.password !== (value)) {\n                callback(new Error(\"密码不匹配\"));\n              } else {\n                return callback()\n              }\n            }\n          }, trigger: 'blur'\n        }]\n      }\n    }\n  },\n  methods: {\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          console.log(\"success submit!!\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      })\n      await this.checkForm();\n      console.log(this.registerForm.errMsg);\n      if (this.registerForm.errMsg) {\n        return this.$message({\n          type: \"error\",\n          message: this.registerForm.errMsg\n        })\n      } else {\n        this.sentForm();\n      }\n\n\n    },\n    async checkForm() {\n      console.log(this.registerForm.username);\n      console.log(this.registerForm.account);\n      const data = {\n        username: this.registerForm.username,\n        nickname: this.registerForm.account,\n      }\n\n      await fetch('api/checkname', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      }).then(response => response.json()).then(res => {\n        if (res.errMsg) {\n          this.registerForm.errMsg = res.errMsg\n        } else {\n          return this.$message({\n            type: \"success\",\n            message: \"注册中\",\n          })\n        }\n      });\n      console.log(\"123\");\n    },\n    sentForm() {\n      const data = {\n        usrname: this.registerForm.username,\n        pwd: this.registerForm.password,\n        nickname: this.registerForm.account\n      }\n      fetch('api/sign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      }).then(response => response.json()).then(res => {\n        if (res.errMsg) {\n\n          this.registerForm.errMsg = res.errMsg;\n        } else {\n          this.$router.push('/login');\n        }\n      });\n    }\n\n  },\n\n\n}\n</script>\n\n<style scoped>\n#register {\n  font-family:shaonv;\n  border-radius: 10px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0px auto;\n  width: 350px;\n  padding: 30px 35px 15px 35px;\n  background: #fff;\n  border: 1px solid #eaeaea;\n  text-align: center;\n  box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}