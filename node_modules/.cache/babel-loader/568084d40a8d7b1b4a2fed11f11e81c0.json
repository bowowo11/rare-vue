{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"common-video\",\n  class: \"h-100\"\n};\nconst _hoisted_2 = [\"poster\", \"src\", \"controls\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Video组件 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([{\n      isShow: $props.control\n    }, \"h-100\"])\n  }, [_createElementVNode(\"video\", {\n    ref: \"myVideo\",\n    poster: $props.poster,\n    src: $data.src,\n    controls: $props.controls,\n    oncontextmenu: \"return false\",\n    onTimeupdate: _cache[0] || (_cache[0] = (...args) => $options.timeupdate && $options.timeupdate(...args)),\n    controlslist: \"nodownload\",\n    class: \"video-box\"\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2)], 2\n  /* CLASS */\n  )])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAEOA,EAAE,EAAC;EAAeC,KAAK,EAAC;;;;6DAD7BC,kCACAC,oBAaM,KAbN,cAaM,CAZJA,oBAWM,KAXN,EAWM;IAXAF,KAAK;MAAAG,QAAYC;IAAZ,GAA6B,OAA7B;EAWL,CAXN,GACEF,oBASS,OATT,EASS;IARPG,GAAG,EAAC,SAQG;IAPNC,MAAM,EAAEF,aAOF;IANNG,GAAG,EAAEC,SAMC;IALNC,QAAQ,EAAEL,eAKJ;IAJPM,aAAa,EAAC,cAIP;IAHNC,YAAU,yCAAEC,mDAAF,CAGJ;IAFPC,YAAY,EAAC,YAEN;IADPb,KAAK,EAAC;EACC,CATT;;EAAA,cADF;;EAAA,CAYI,CAbN","names":["id","class","_createCommentVNode","_createElementVNode","isShow","$props","ref","poster","src","$data","controls","oncontextmenu","onTimeupdate","$options","controlslist"],"sourceRoot":"","sources":["/home/huzihao/rare-vue/src/components/ADvideo.vue"],"sourcesContent":["<template>\n  <!-- Video组件 -->\n  <div id=\"common-video\" class=\"h-100\">\n    <div :class=\"{ isShow: control }\" class=\"h-100\">\n      <video\n        ref=\"myVideo\"\n        :poster=\"poster\"\n        :src=\"src\"\n        :controls=\"controls\"\n        oncontextmenu=\"return false\"\n        @timeupdate=\"timeupdate\"\n        controlslist=\"nodownload\"\n        class=\"video-box\"\n      ></video>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CommonVideo\",\n  data() {\n    return {\n      videoState: false, // 视频播放状态\n      // 学时\n      studyTime: {\n        currentTime: 0, // 当前已学时长\n        duration: 0, // 总时长\n      },\n      timer: {}, // 定时器\n      pauseTimer: {}, // 暂停定时器\n      src: \"\",\n    };\n  },\n  /**\n   * @param poster 展示图\n   * @param src 视频资源\n   * @param controls 是否显示控件\n   * @param control 控件控制\n   * @param videoData 视频基础数据\n   */\n  props: {\n    poster: {\n      type: String,\n      required: false,\n      default: \"\",\n    },\n    controls: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    control: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n  },\n  mounted() {\n    // 监听视频播放\n    this.$refs.myVideo.addEventListener(\"play\", () => {\n      console.log(\"video is playing\");\n      this.openTimer();\n    });\n    // 监听视频暂停\n    this.$refs.myVideo.addEventListener(\"pause\", () => {\n      console.log(\"video is stop\");\n      this.closeTimer();\n    });\n  },\n  methods: {\n    // 开启定时器\n    openTimer() {\n      this.timer = setInterval(() => {\n        that.$refs.child.src;\n        this.$emit(\"videoStudyTime\", this.studyTime);\n      }, 5000);\n    },\n    // 关闭定时器\n    closeTimer() {\n      clearInterval(this.timer);\n      this.$emit(\"videoStudyTime\", this.studyTime);\n    },\n    // 开启暂停定时器\n    openPauseTimer() {\n      this.pauseTimer = setInterval(() => {\n        this.hintOperate();\n      }, 600000);\n    },\n    // 关闭暂停定时器\n    closePauseTimer() {\n      clearInterval(this.pauseTimer);\n    },\n    // 提示操作\n    hintOperate() {\n      this.operateVideo();\n      this.$alert(\"请点击确认继续学习\", \"提示\", {\n        confirmButtonText: \"确定\",\n        confirmButtonClass: \"hint-btn\",\n        showClose: false,\n        callback: (action) => {\n          this.$refs.myVideo.currentTime = this.videoData.currentTime;\n          this.operateVideo();\n          this.openPauseTimer();\n        },\n      });\n    },\n    // 获取当前播放位置\n    timeupdate(e) {\n      this.studyTime.currentTime = e.target.currentTime;\n      this.studyTime.duration = e.target.duration ? e.target.duration : 0;\n    },\n    // 操作视频播放、暂停\n    operateVideo() {\n      if (!this.src) {\n        this.$message({ message: \"暂无视频资源，请查看其他视频！\" });\n        return false;\n      }\n      if (this.$refs.myVideo.paused) {\n        this.$refs.myVideo.play();\n        this.videoState = true;\n      } else {\n        this.$refs.myVideo.pause();\n        this.videoState = false;\n      }\n    },\n  },\n  watch: {\n    // 监听操作\n    videoData(val, oldVal) {\n      const { currentTime, duration } = val;\n      if (currentTime && duration && currentTime < duration) {\n        this.hintOperate();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\nvideo {\n  max-height: 60vh;\n  max-width: 80vw;\n}\n#common-video {\n  position: relative;\n  .video-box {\n    box-sizing: border-box;\n    border: 0;\n    display: block;\n    width: 100%;\n    height: 100%;\n    outline: none !important;\n  }\n  .isShow {\n    //进度条\n    video::-webkit-media-controls-timeline {\n      display: none;\n    }\n  }\n  video::-webkit-media-controls-play-button {\n    visibility: hidden;\n  }\n  .operate-btn {\n    display: block;\n    width: 60px;\n    height: 60px;\n    position: absolute;\n    top: calc(50% - 30px);\n    left: calc(50% - 30px);\n  }\n  .operate-btn:hover {\n    opacity: 0.8;\n  }\n  .fade-out {\n    opacity: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}