{"ast":null,"code":"export default {\n  name: \"register\",\n\n  data() {\n    return {\n      registerForm: {\n        username: '',\n        account: '',\n        password: '',\n        cpPassword: '',\n        errMsg: ''\n      },\n      rules: {\n        registerForm: {\n          type: 'object',\n          required: true,\n          fields: {\n            username: [{\n              required: true,\n              message: '用户名必填',\n              trigger: 'blur'\n            }, {\n              message: '用户名必须要有3-10个字母或数字',\n              pattern: /[a-zA-Z1-9]{3,10}/\n            }],\n            account: [{\n              required: true,\n              message: '昵称必填',\n              trigger: 'blur'\n            }, {\n              message: '昵称必须要有1-10个字符',\n              pattern: /\\S{1,10}/\n            }],\n            password: [{\n              required: true,\n              message: '密码必填',\n              trigger: 'blur'\n            }, {\n              message: '密码必须由长度6-16个字母或数字组成，至少包含字母、数字',\n              pattern: /^(?=.*[a-zA-Z])(?=.*\\d).{6,16}$/\n            }],\n            cpPassword: [{\n              required: true,\n              trigger: 'blur'\n            }]\n          }\n        }\n      }\n    };\n  },\n\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {});\n      const userName = this.registerForm.username;\n      const userPassword = this.registerForm.password;\n      const userCpPassword = this.registerForm.cpPassword;\n      this.checkForm();\n      this.sentForm();\n    },\n\n    checkForm() {\n      const data = {\n        name: this.registerForm.username,\n        username: this.registerForm.account\n      };\n      fetch('api/checkname', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(res => {\n        if (res.errMsg) {\n          this.registerForm.errMsg = res.errMsg;\n        } else {\n          return this.$message({\n            type: \"success\",\n            message: \"注册中\"\n          });\n        }\n      });\n    },\n\n    sentForm() {\n      const data = {\n        username: this.registerForm.username,\n        psw: this.registerForm.password,\n        nickname: this.registerForm.account\n      };\n      fetch('api/sign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(res => {\n        if (res.errMsg) {\n          this.registerForm.errMsg = res.errMsg;\n        } else {\n          this.$router.push('/login');\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8DA,eAAe;EAIbA,IAAI,EAAE,UAJO;;EAMbC,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAC;QACXC,QAAQ,EAAC,EADE;QAEXC,OAAO,EAAC,EAFG;QAGXC,QAAQ,EAAC,EAHE;QAIXC,UAAU,EAAC,EAJA;QAKXC,MAAM,EAAC;MALI,CADR;MAQLC,KAAK,EAAC;QACJN,YAAY,EAAC;UACXO,IAAI,EAAE,QADK;UAEXC,QAAQ,EAAE,IAFC;UAGXC,MAAM,EAAC;YACLR,QAAQ,EAAE,CAAC;cAAEO,QAAQ,EAAE,IAAZ;cAAkBE,OAAO,EAAE,OAA3B;cAAoCC,OAAO,EAAE;YAA7C,CAAD,EAAuD;cAACD,OAAO,EAAC,mBAAT;cAA6BE,OAAO,EAAC;YAArC,CAAvD,CADL;YAELV,OAAO,EAAE,CAAC;cAAEM,QAAQ,EAAE,IAAZ;cAAkBE,OAAO,EAAE,MAA3B;cAAmCC,OAAO,EAAE;YAA5C,CAAD,EAAsD;cAACD,OAAO,EAAE,eAAV;cAA0BE,OAAO,EAAC;YAAlC,CAAtD,CAFJ;YAGLT,QAAQ,EAAE,CAAC;cAAEK,QAAQ,EAAE,IAAZ;cAAkBE,OAAO,EAAE,MAA3B;cAAmCC,OAAO,EAAE;YAA5C,CAAD,EAAsD;cAACD,OAAO,EAAE,+BAAV;cAA0CE,OAAO,EAAC;YAAlD,CAAtD,CAHL;YAILR,UAAU,EAAE,CAAC;cAAGI,QAAQ,EAAE,IAAb;cAAmBG,OAAO,EAAE;YAA5B,CAAD;UAJP;QAHI;MADT;IARD,CAAP;EAsBD,CA7BY;;EA8BbE,OAAO,EAAC;IACNC,UAAU,CAACC,QAAD,EAAU;MAClB,KAAKC,KAAL,CAAWD,QAAX,EAAqBE,QAArB,CAA8BC,KAAI,IAAK,CAEtC,CAFD;MAGA,MAAMC,QAAO,GAAI,KAAKnB,YAAL,CAAkBC,QAAnC;MACA,MAAMmB,YAAW,GAAI,KAAKpB,YAAL,CAAkBG,QAAvC;MACA,MAAMkB,cAAa,GAAI,KAAKrB,YAAL,CAAkBI,UAAzC;MACA,KAAKkB,SAAL;MACA,KAAKC,QAAL;IACD,CAVK;;IAWRD,SAAS,GAAE;MACT,MAAMvB,IAAI,GAAC;QACXD,IAAI,EAAC,KAAKE,YAAL,CAAkBC,QADZ;QAEXA,QAAQ,EAAC,KAAKD,YAAL,CAAkBE;MAFhB,CAAX;MAKAsB,KAAK,CAAC,eAAD,EAAkB;QACrBC,MAAM,EAAE,MADa;QAErBC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFY;QAKrBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9B,IAAf;MALe,CAAlB,CAAL,CAMG+B,IANH,CAMQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EANpB,EAMqCF,IANrC,CAM0CG,GAAE,IAAI;QAAC,IAAGA,GAAG,CAAC5B,MAAP,EAAc;UAAC,KAAKL,YAAL,CAAkBK,MAAlB,GAAyB4B,GAAG,CAAC5B,MAA7B;QAAoC,CAAnD,MAAuD;UAAC,OAAO,KAAK6B,QAAL,CAAc;YAC5H3B,IAAI,EAAE,SADsH;YAE5HG,OAAO,EAAE;UAFmH,CAAd,CAAP;QAGvG;MACD,CAVD;IAWD,CA5BO;;IA6BNa,QAAQ,GAAE;MACR,MAAMxB,IAAI,GAAC;QACTE,QAAQ,EAAC,KAAKD,YAAL,CAAkBC,QADlB;QAETkC,GAAG,EAAC,KAAKnC,YAAL,CAAkBG,QAFb;QAGTiC,QAAQ,EAAC,KAAKpC,YAAL,CAAkBE;MAHlB,CAAX;MAKAsB,KAAK,CAAC,UAAD,EAAa;QAChBC,MAAM,EAAE,MADQ;QAEhBC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFO;QAKhBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9B,IAAf;MALU,CAAb,CAAL,CAMG+B,IANH,CAMQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EANpB,EAMqCF,IANrC,CAM0CG,GAAE,IAAI;QAAC,IAAGA,GAAG,CAAC5B,MAAP,EAAc;UAAC,KAAKL,YAAL,CAAkBK,MAAlB,GAAyB4B,GAAG,CAAC5B,MAA7B;QAAoC,CAAnD,MAAuD;UAAC,KAAKgC,OAAL,CAAaC,IAAb,CAAkB,QAAlB;QAA4B;MAAC,CANtI;IAOF;;EA1CM;AA9BK,CAAf","names":["name","data","registerForm","username","account","password","cpPassword","errMsg","rules","type","required","fields","message","trigger","pattern","methods","submitForm","formName","$refs","validate","valid","userName","userPassword","userCpPassword","checkForm","sentForm","fetch","method","headers","body","JSON","stringify","then","response","json","res","$message","psw","nickname","$router","push"],"sourceRoot":"","sources":["/home/huzihao/rare-vue/src/views/register.vue"],"sourcesContent":["<template>\n  <div id=\"register\">\n  <el-form\n      :model=\"registerForm\"\n      ref=\"registerFormRef\"\n      label-width=\"100px\"\n      rules=\"rules\"\n  ><el-form-item label=\"用户名：\" prop=\"username\" style=\"margin-top: 10px\">\n    <el-row>\n        <el-input\n            class=\"inps\"\n            placeholder=\"创建一个用户名\"\n            v-model=\"registerForm.username\"\n        >\n        </el-input>\n\n    </el-row>\n  </el-form-item>\n    <el-form-item label=\"昵称：\" prop=\"account\" style=\"margin-top: 10px\">\n      <el-row>\n          <el-input\n              class=\"inps\"\n              placeholder=\"创建一个昵称\"\n              v-model=\"registerForm.account\"\n          >\n          </el-input>\n      </el-row>\n    </el-form-item>\n    <el-form-item label=\"密码：\" prop=\"password\">\n      <el-row>\n\n          <el-input\n              class=\"inps\"\n              type=\"password\"\n              placeholder=\"请输入密码\"\n              v-model=\"registerForm.password\"\n          ></el-input>\n      </el-row>\n    </el-form-item>\n    <el-form-item label=\"确认密码：\" prop=\"cpPassword\">\n      <el-row>\n\n          <el-input\n              class=\"inps\"\n              type=\"password\"\n              placeholder=\"再次输入密码\"\n              v-model=\"registerForm.cpPassword\"\n          ></el-input>\n\n      </el-row>\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" round class=\"submitBtn\" @click=\"submitForm('registerFormRef')\"\n      >提交\n      </el-button>\n    </el-form-item>\n  </el-form>\n  </div>\n</template>\n\n<script>\n\nexport default {\n\n\n\n  name: \"register\",\n\n  data() {\n    return {\n      registerForm:{\n        username:'',\n        account:'',\n        password:'',\n        cpPassword:'',\n        errMsg:''\n      },\n      rules:{\n        registerForm:{\n          type: 'object',\n          required: true,\n          fields:{\n            username: [{ required: true, message: '用户名必填', trigger: 'blur' },{message:'用户名必须要有3-10个字母或数字',pattern:/[a-zA-Z1-9]{3,10}/}],\n            account: [{ required: true, message: '昵称必填', trigger: 'blur' },{message: '昵称必须要有1-10个字符',pattern:/\\S{1,10}/}],\n            password: [{ required: true, message: '密码必填', trigger: 'blur' },{message: '密码必须由长度6-16个字母或数字组成，至少包含字母、数字',pattern:/^(?=.*[a-zA-Z])(?=.*\\d).{6,16}$/}],\n            cpPassword: [{  required: true, trigger: 'blur' },]\n          }\n        }\n\n      }\n    }\n  },\n  methods:{\n    submitForm(formName){\n      this.$refs[formName].validate(valid => {\n\n      })\n      const userName = this.registerForm.username;\n      const userPassword = this.registerForm.password;\n      const userCpPassword = this.registerForm.cpPassword;\n      this.checkForm();\n      this.sentForm();\n    },\n  checkForm(){\n    const data={\n    name:this.registerForm.username,\n    username:this.registerForm.account,\n  }\n\n    fetch('api/checkname', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(response => response.json()).then(res =>{if(res.errMsg){this.registerForm.errMsg=res.errMsg}else{return this.$message({\n      type: \"success\",\n      message: \"注册中\",\n    })}\n    });\n  },\n    sentForm(){\n      const data={\n        username:this.registerForm.username,\n        psw:this.registerForm.password,\n        nickname:this.registerForm.account\n      }\n      fetch('api/sign', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      }).then(response => response.json()).then(res =>{if(res.errMsg){this.registerForm.errMsg=res.errMsg}else{this.$router.push('/login')}});\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n#register {\n  border-radius: 10px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%,-50%);\n  margin: 0px auto;\n  width: 350px;\n  padding: 30px 35px 15px 35px;\n  background: #fff;\n  border: 1px solid #eaeaea;\n  text-align: center;\n  box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}