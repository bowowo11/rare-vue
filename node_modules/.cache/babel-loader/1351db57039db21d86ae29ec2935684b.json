{"ast":null,"code":"export default {\n  name: \"CommonVideo\",\n\n  data() {\n    return {\n      videoState: false,\n      // 视频播放状态\n      // 学时\n      studyTime: {\n        currentTime: 0,\n        // 当前已学时长\n        duration: 0 // 总时长\n\n      },\n      timer: {},\n      // 定时器\n      pauseTimer: {} // 暂停定时器\n\n    };\n  },\n\n  /**\n   * @param poster 展示图\n   * @param src 视频资源\n   * @param controls 是否显示控件\n   * @param control 控件控制\n   * @param videoData 视频基础数据\n   */\n  props: {\n    src: {\n      type: String,\n      required: true,\n      default: \"\"\n    },\n    poster: {\n      type: String,\n      required: false,\n      default: \"\"\n    },\n    controls: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    control: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n\n  mounted() {\n    // 监听视频播放\n    this.$refs.myVideo.addEventListener(\"play\", () => {\n      console.log(\"video is playing\");\n      this.openTimer();\n    }); // 监听视频暂停\n\n    this.$refs.myVideo.addEventListener(\"pause\", () => {\n      console.log(\"video is stop\");\n      this.closeTimer();\n    });\n  },\n\n  methods: {\n    // 开启定时器\n    openTimer() {\n      this.timer = setInterval(() => {\n        this.$emit(\"videoStudyTime\", this.studyTime);\n      }, 5000);\n    },\n\n    // 关闭定时器\n    closeTimer() {\n      clearInterval(this.timer);\n      this.$emit(\"videoStudyTime\", this.studyTime);\n    },\n\n    // 开启暂停定时器\n    openPauseTimer() {\n      this.pauseTimer = setInterval(() => {\n        this.hintOperate();\n      }, 600000);\n    },\n\n    // 关闭暂停定时器\n    closePauseTimer() {\n      clearInterval(this.pauseTimer);\n    },\n\n    // 提示操作\n    hintOperate() {\n      this.operateVideo();\n      this.$alert(\"请点击确认继续学习\", \"提示\", {\n        confirmButtonText: \"确定\",\n        confirmButtonClass: \"hint-btn\",\n        showClose: false,\n        callback: action => {\n          this.$refs.myVideo.currentTime = this.videoData.currentTime;\n          this.operateVideo();\n          this.openPauseTimer();\n        }\n      });\n    },\n\n    // 获取当前播放位置\n    timeupdate(e) {\n      this.studyTime.currentTime = e.target.currentTime;\n      this.studyTime.duration = e.target.duration ? e.target.duration : 0;\n    },\n\n    // 操作视频播放、暂停\n    operateVideo() {\n      if (!this.src) {\n        this.$message({\n          message: \"暂无视频资源，请查看其他视频！\"\n        });\n        return false;\n      }\n\n      if (this.$refs.myVideo.paused) {\n        this.$refs.myVideo.play();\n        this.videoState = true;\n      } else {\n        this.$refs.myVideo.pause();\n        this.videoState = false;\n      }\n    }\n\n  },\n  watch: {\n    // 监听操作\n    videoData(val, oldVal) {\n      const {\n        currentTime,\n        duration\n      } = val;\n\n      if (currentTime && duration && currentTime < duration) {\n        this.hintOperate();\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","videoState","studyTime","currentTime","duration","timer","pauseTimer","props","src","type","String","required","default","poster","controls","Boolean","control","mounted","$refs","myVideo","addEventListener","console","log","openTimer","closeTimer","methods","setInterval","$emit","clearInterval","openPauseTimer","hintOperate","closePauseTimer","operateVideo","$alert","confirmButtonText","confirmButtonClass","showClose","callback","action","videoData","timeupdate","e","target","$message","message","paused","play","pause","watch","val","oldVal"],"sourceRoot":"","sources":["/home/huzihao/rare-vue/src/components/ADvideo.vue"],"sourcesContent":["<template>\n  <!-- Video组件 -->\n  <div id=\"common-video\" class=\"h-100\">\n    <div :class=\"{ isShow: control }\" class=\"h-100\">\n      <video\n        ref=\"myVideo\"\n        :poster=\"poster\"\n        :src=\"src\"\n        :controls=\"controls\"\n        oncontextmenu=\"return false\"\n        @timeupdate=\"timeupdate\"\n        controlslist=\"nodownload\"\n        class=\"video-box\"\n      ></video>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CommonVideo\",\n  data() {\n    return {\n      videoState: false, // 视频播放状态\n      // 学时\n      studyTime: {\n        currentTime: 0, // 当前已学时长\n        duration: 0, // 总时长\n      },\n      timer: {}, // 定时器\n      pauseTimer: {}, // 暂停定时器\n    };\n  },\n  /**\n   * @param poster 展示图\n   * @param src 视频资源\n   * @param controls 是否显示控件\n   * @param control 控件控制\n   * @param videoData 视频基础数据\n   */\n  props: {\n    src: {\n      type: String,\n      required: true,\n       default: \"\",\n    },\n    poster: {\n      type: String,\n      required: false,\n      default: \"\",\n    },\n    controls: {\n      type: Boolean,\n      required: false,\n      default:false,\n    },\n    control: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n  },\n  mounted() {\n    // 监听视频播放\n    this.$refs.myVideo.addEventListener(\"play\", () => {\n      console.log(\"video is playing\");\n      this.openTimer();\n    });\n    // 监听视频暂停\n    this.$refs.myVideo.addEventListener(\"pause\", () => {\n      console.log(\"video is stop\");\n      this.closeTimer();\n    });\n  },\n  methods: {\n    // 开启定时器\n    openTimer() {\n      this.timer = setInterval(() => {\n        this.$emit(\"videoStudyTime\", this.studyTime);\n      }, 5000);\n    },\n    // 关闭定时器\n    closeTimer() {\n      clearInterval(this.timer);\n      this.$emit(\"videoStudyTime\", this.studyTime);\n    },\n    // 开启暂停定时器\n    openPauseTimer() {\n      this.pauseTimer = setInterval(() => {\n        this.hintOperate();\n      }, 600000);\n    },\n    // 关闭暂停定时器\n    closePauseTimer() {\n      clearInterval(this.pauseTimer);\n    },\n    // 提示操作\n    hintOperate() {\n      this.operateVideo();\n      this.$alert(\"请点击确认继续学习\", \"提示\", {\n        confirmButtonText: \"确定\",\n        confirmButtonClass: \"hint-btn\",\n        showClose: false,\n        callback: (action) => {\n          this.$refs.myVideo.currentTime = this.videoData.currentTime;\n          this.operateVideo();\n          this.openPauseTimer();\n        },\n      });\n    },\n    // 获取当前播放位置\n    timeupdate(e) {\n      this.studyTime.currentTime = e.target.currentTime;\n      this.studyTime.duration = e.target.duration ? e.target.duration : 0;\n    },\n    // 操作视频播放、暂停\n    operateVideo() {\n      if (!this.src) {\n        this.$message({ message: \"暂无视频资源，请查看其他视频！\" });\n        return false;\n      }\n      if (this.$refs.myVideo.paused) {\n        this.$refs.myVideo.play();\n        this.videoState = true;\n      } else {\n        this.$refs.myVideo.pause();\n        this.videoState = false;\n      }\n    },\n  },\n  watch: {\n    // 监听操作\n    videoData(val, oldVal) {\n      const { currentTime, duration } = val;\n      if (currentTime && duration && currentTime < duration) {\n        this.hintOperate();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n#common-video {\n  position: relative;\n  .video-box {\n    box-sizing: border-box;\n    border: 0;\n    display: block;\n    width: 100%;\n    height: 100%;\n    outline: none !important;\n  }\n  .isShow {\n    //进度条\n    video::-webkit-media-controls-timeline {\n      display: none;\n    }\n  }\n  video::-webkit-media-controls-play-button {\n    visibility: hidden;\n  }\n  .operate-btn {\n    display: block;\n    width: 60px;\n    height: 60px;\n    position: absolute;\n    top: calc(50% - 30px);\n    left: calc(50% - 30px);\n  }\n  .operate-btn:hover {\n    opacity: 0.8;\n  }\n  .fade-out {\n    opacity: 0;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}